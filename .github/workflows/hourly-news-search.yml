name: Hourly News Search

on:
  # schedule:
  #   - cron: '*/15 * * * *'  # Run every 15 minutes
  workflow_dispatch:  # Keep manual triggering available
    inputs:
      debug:
        description: 'Enable debug logging'
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  search-news:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Validate environment
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        if [ -z "$OPENAI_API_KEY" ]; then
          echo "Error: OPENAI_API_KEY secret is not set"
          exit 1
        fi
        echo "Environment validation passed"
        
    - name: Run news search script
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        DEBUG: ${{ inputs.debug || 'false' }}
      run: |
        if [ "$DEBUG" = "true" ]; then
          echo "Debug mode enabled"
          export PYTHONPATH="$PYTHONPATH:."
        fi
        python news_search.py
        
    - name: Check results
      run: |
        if [ -f "news_results_latest.json" ]; then
          echo "✅ Results file created successfully"
          echo "File size: $(stat -c%s news_results_latest.json) bytes"
          echo "Results preview:"
          head -20 news_results_latest.json || true
        else
          echo "❌ Results file not found"
          exit 1
        fi
        
    - name: Upload results as artifacts
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if previous steps failed
      with:
        name: news-search-results-${{ github.run_id }}
        path: |
          news_results_*.json
          *.log
        retention-days: 30
        
    - name: Upload latest results
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: latest-news-results
        path: news_results_latest.json
        retention-days: 7
        
    - name: Summary
      if: always()
      run: |
        echo "## News Search Results" >> $GITHUB_STEP_SUMMARY
        if [ -f "news_results_latest.json" ]; then
          echo "✅ News search completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "### Results:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          cat news_results_latest.json >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ News search failed" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs for details." >> $GITHUB_STEP_SUMMARY
        fi
